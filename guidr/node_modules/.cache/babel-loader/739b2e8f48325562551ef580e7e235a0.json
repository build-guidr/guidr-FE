{"ast":null,"code":"import _classCallCheck from \"/Users/trishnaamin/Lambda School/week-10/guidr-FE/guidr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/trishnaamin/Lambda School/week-10/guidr-FE/guidr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/trishnaamin/Lambda School/week-10/guidr-FE/guidr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/trishnaamin/Lambda School/week-10/guidr-FE/guidr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/trishnaamin/Lambda School/week-10/guidr-FE/guidr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/trishnaamin/Lambda School/week-10/guidr-FE/guidr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/trishnaamin/Lambda School/week-10/guidr-FE/guidr/src/components/GatedContent/Trips.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport GatedContentNav from \"./GatedContentNav\";\n\nvar Trips =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Trips, _Component);\n\n  function Trips() {\n    var _this;\n\n    _classCallCheck(this, Trips);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Trips).call(this));\n\n    _this.selectTabHandler = function (tab) {\n      // this function should take in the tab and update the state with the new tab.\n      console.log(tab);\n\n      _this.setState({\n        professional: tab\n      });\n    };\n\n    _this.filterTrips = function () {\n      /* Right now this function only returns the cards on state.\n        We're going to make this function more dynamic\n        by using it to filter out our cards for when a tab is selcted\n        \n        Notice that we're passing this function to our <Cards /> component below.\n        This function returns an array of cards, so we can just pass it down as such.\n         Your algorithim for the logic here is as follows: \n          - if the selected tab is 'all' it should return all \n            of the items from cardData. \n          - else, it should only return those cards whose 'tab' matched this.state.selected.\n      */\n      return _this.state.trips.filter(function (trip) {\n        return trip.professional === _this.state.professional;\n      });\n    };\n\n    _this.state = {\n      trips: [],\n      professional: null\n    };\n    console.log(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Trips, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var endpoint = \"https://ls-guidr.herokuapp.com/api/trips\";\n      axios.get(endpoint).then(function (res) {\n        var trips = res.data;\n\n        _this2.setState({\n          trips: trips,\n          professional: trips.map(function (trip) {\n            return trip.professional;\n          })\n        });\n      }).catch(function (error) {\n        console.error(\"USERS ERROR\", error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(GatedContentNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"My Trips\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Toggles, {\n        toggles: this.state.professional,\n        selectTabHandler: this.selectTabHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.trips.map(function (trip) {\n        return React.createElement(\"div\", {\n          key: trip.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, trip.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, trip.description), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, trip.professional), React.createElement(Link, {\n          to: \"/trips/\".concat(trip.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Details\")));\n      })));\n    }\n  }]);\n\n  return Trips;\n}(Component);\n\nexport default axiosWithAuth(Trips);","map":{"version":3,"sources":["/Users/trishnaamin/Lambda School/week-10/guidr-FE/guidr/src/components/GatedContent/Trips.js"],"names":["React","Component","Route","axiosWithAuth","axios","Link","GatedContentNav","Trips","selectTabHandler","tab","console","log","setState","professional","filterTrips","state","trips","filter","trip","endpoint","get","then","res","data","map","catch","error","id","title","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport GatedContentNav from \"./GatedContentNav\";\n\nclass Trips extends Component {\n  constructor() {\n    super();\n    this.state = {\n      trips: [],\n      professional: null\n    };\n    console.log(this);\n  }\n\n  componentDidMount() {\n    const endpoint = \"https://ls-guidr.herokuapp.com/api/trips\";\n    axios\n      .get(endpoint)\n      .then(res => {\n        const trips = res.data;\n        this.setState({\n          trips,\n          professional: trips.map(trip => trip.professional)\n        });\n      })\n      .catch(error => {\n        console.error(\"USERS ERROR\", error);\n      });\n  }\n\n  selectTabHandler = tab => {\n    // this function should take in the tab and update the state with the new tab.\n    console.log(tab);\n    this.setState({\n      professional: tab\n    });\n  };\n\n  filterTrips = () => {\n    /* Right now this function only returns the cards on state.\n      We're going to make this function more dynamic\n      by using it to filter out our cards for when a tab is selcted\n      \n      Notice that we're passing this function to our <Cards /> component below.\n      This function returns an array of cards, so we can just pass it down as such.\n\n      Your algorithim for the logic here is as follows: \n        - if the selected tab is 'all' it should return all \n          of the items from cardData. \n        - else, it should only return those cards whose 'tab' matched this.state.selected.\n    */\n    return this.state.trips.filter(\n      trip => trip.professional === this.state.professional\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <GatedContentNav />\n        </div>\n        <h1>My Trips</h1>\n        <div>\n          <Toggles\n            toggles={this.state.professional}\n            selectTabHandler={this.selectTabHandler}\n          />\n        </div>\n        <div>\n          {this.state.trips.map(trip => (\n            <div key={trip.id}>\n              <p>{trip.title}</p>\n              <p>{trip.description}</p>\n              <p>{trip.professional}</p>\n              <Link to={`/trips/${trip.id}`}>\n                <p>Details</p>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default axiosWithAuth(Trips);\n"]},"metadata":{},"sourceType":"module"}